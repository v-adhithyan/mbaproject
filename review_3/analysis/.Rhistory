row_mean <- apply(cluster_profile, 1, mean)
col_mean <- apply(cluster_profile, 2, mean)
sorted_profile<-cluster_profile[order(row_mean),c(4,3,1,2,5)]
# reordered cluster sizes and profiles
cluster_size[c(4,3,1,2,5)]/250
round(sorted_profile,2)
matplot(sorted_profile[,-4], type = c("b"), pch="*", lwd=3,
xlab="Satisfaction score ordered by average for total score",
ylab="Average Ratings for Each Cluster")
title("Not at all likely, Not very likely, Quite Likely, Very Likely")
matplot(sorted_profile[,4], type = c("b"), pch="*", lwd=3,
xlab="Satisfaction score ordered by average for total score",
ylab="Average Ratings for Last Cluster")
title("People who are satisfied")
library('semPLS')
data <- read.csv("cs-1.csv")
names <- names(data)
kcl5 <- kmeans(data, 4 , nstart=25)
cluster_profile <- t(kcl5$centers)
cluster_size <- kcl5$size
row_mean <- apply(cluster_profile, 1, mean)
col_mean <- apply(cluster_profile, 2, mean)
sorted_profile<-cluster_profile[order(row_mean),c(4,3,1,2,5)]
# reordered cluster sizes and profiles
cluster_size[c(4,3,1,2)]/250
round(sorted_profile,2)
matplot(sorted_profile[,-4], type = c("b"), pch="*", lwd=3,
xlab="Satisfaction score ordered by average for total score",
ylab="Average Ratings for Each Cluster")
title("Not at all likely, Not very likely, Quite Likely, Very Likely")
matplot(sorted_profile[,4], type = c("b"), pch="*", lwd=3,
xlab="Satisfaction score ordered by average for total score",
ylab="Average Ratings for Last Cluster")
title("People who are satisfied")
library('semPLS')
data <- read.csv("cs-1.csv")
names <- names(data)
kcl5 <- kmeans(data, 4 , nstart=25)
cluster_profile <- t(kcl5$centers)
cluster_size <- kcl5$size
row_mean <- apply(cluster_profile, 1, mean)
col_mean <- apply(cluster_profile, 2, mean)
sorted_profile<-cluster_profile[order(row_mean),c(4,3,1,2,5)]
# reordered cluster sizes and profiles
cluster_size[c(4,3,1,2)]/101
round(sorted_profile,2)
matplot(sorted_profile[,-4], type = c("b"), pch="*", lwd=3,
xlab="Satisfaction score ordered by average for total score",
ylab="Average Ratings for Each Cluster")
title("Not at all likely, Not very likely, Quite Likely, Very Likely")
matplot(sorted_profile[,4], type = c("b"), pch="*", lwd=3,
xlab="Satisfaction score ordered by average for total score",
ylab="Average Ratings for Last Cluster")
title("People who are satisfied")
library('semPLS')
data <- read.csv("cs-1.csv")
names <- names(data)
kcl5 <- kmeans(data, 4 , nstart=25)
cluster_profile <- t(kcl5$centers)
cluster_size <- kcl5$size
row_mean <- apply(cluster_profile, 1, mean)
col_mean <- apply(cluster_profile, 2, mean)
sorted_profile<-cluster_profile[order(row_mean),c(4,3,1,2,5)]
# reordered cluster sizes and profiles
cluster_size[c(4,3,1,2)]/101
round(sorted_profile,2)
png("unsatisfied.png")
matplot(sorted_profile[,-4], type = c("b"), pch="*", lwd=3,
xlab="Satisfaction score ordered by average for total score",
ylab="Average Ratings for Each Cluster")
title("Not at all likely, Not very likely, Quite Likely, Very Likely")
dev.off()
png("satisfied.png")
matplot(sorted_profile[,4], type = c("b"), pch="*", lwd=3,
xlab="Satisfaction score ordered by average for total score",
ylab="Average Ratings for Last Cluster")
title("People who are satisfied")
dev.off()
library('semPLS')
data <- read.csv("cs-1.csv")
names <- names(data)
kcl5 <- kmeans(data, 4 , nstart=25)
cluster_profile <- t(kcl5$centers)
cluster_size <- kcl5$size
row_mean <- apply(cluster_profile, 1, mean)
col_mean <- apply(cluster_profile, 2, mean)
sorted_profile<-cluster_profile[order(row_mean),c(4,3,1,2,5)]
# reordered cluster sizes and profiles
cluster_size[c(4,3,1,2)]/101
round(sorted_profile,2)
png("unsatisfied.png")
matplot(sorted_profile[,-4], type = c("b"), pch="*", lwd=3,
xlab="Satisfaction score ordered by average for total sample",
ylab="Average Ratings for Each Cluster")
title("Not at all likely, Not very likely, Quite Likely")
dev.off()
png("satisfied.png")
matplot(sorted_profile[,4], type = c("b"), pch="*", lwd=3,
xlab="Satisfaction score ordered by average for total sample",
ylab="Average Ratings for Last Cluster")
title("People who are satisfied")
dev.off()
library('semPLS')
data <- read.csv("cs-1.csv")
names <- names(data)
kcl5 <- kmeans(data, 4 , nstart=25)
cluster_profile <- t(kcl5$centers)
cluster_size <- kcl5$size
row_mean <- apply(cluster_profile, 1, mean)
col_mean <- apply(cluster_profile, 2, mean)
sorted_profile<-cluster_profile[order(row_mean),c(4,3,1,2)]
# reordered cluster sizes and profiles
cluster_size[c(4,3,1,2)]/101
round(sorted_profile,2)
png("unsatisfied.png")
matplot(sorted_profile[,-4], type = c("b"), pch="*", lwd=3,
xlab="Satisfaction score ordered by average for total sample",
ylab="Average Ratings for Each Cluster")
title("Not at all likely, Not very likely, Quite Likely")
dev.off()
png("satisfied.png")
matplot(sorted_profile[,4], type = c("b"), pch="*", lwd=3,
xlab="Satisfaction score ordered by average for total sample",
ylab="Average Ratings for Last Cluster")
title("People who are satisfied")
dev.off()
library('semPLS')
data <- read.csv("cs-1.csv")
names <- names(data)
kcl5 <- kmeans(data, 4 , nstart=25)
cluster_profile <- t(kcl5$centers)
cluster_size <- kcl5$size
row_mean <- apply(cluster_profile, 1, mean)
col_mean <- apply(cluster_profile, 2, mean)
sorted_profile<-cluster_profile[order(row_mean),c(1,2,3,4)]
# reordered cluster sizes and profiles
cluster_size[c(1,2,3,4)]/101
round(sorted_profile,2)
png("unsatisfied.png")
matplot(sorted_profile[,-4], type = c("b"), pch="*", lwd=3,
xlab="Satisfaction score ordered by average for total sample",
ylab="Average Ratings for Each Cluster")
title("Not at all likely, Not very likely, Quite Likely")
dev.off()
png("satisfied.png")
matplot(sorted_profile[,4], type = c("b"), pch="*", lwd=3,
xlab="Satisfaction score ordered by average for total sample",
ylab="Average Ratings for Last Cluster")
title("People who are satisfied")
dev.off()
library('semPLS')
data <- read.csv("cs-1.csv")
names <- names(data)
kcl5 <- kmeans(data, 4 , nstart=25)
cluster_profile <- t(kcl5$centers)
cluster_size <- kcl5$size
row_mean <- apply(cluster_profile, 1, mean)
col_mean <- apply(cluster_profile, 2, mean)
sorted_profile<-cluster_profile[order(row_mean),c(1,2,3,4)]
# reordered cluster sizes and profiles
cluster_size[c(1,2,3,4)]/101
round(sorted_profile,2)
png("unsatisfied.png")
matplot(sorted_profile[,-4], type = c("b"), pch="*", lwd=3,
xlab="Satisfaction score ordered by average for total sample",
ylab="Average Ratings for Each Cluster")
title("Not at all likely, Not very likely, Quite Likely")
dev.off()
png("satisfied.png")
matplot(sorted_profile[,4], type = c("b"), pch="*", lwd=3,
xlab="Satisfaction score ordered by average for total sample",
ylab="Average Ratings for Last Cluster")
title("People who are satisfied")
dev.off()
library('semPLS')
data <- read.csv("loyalty-1.csv")
names <- names(data)
kcl5 <- kmeans(data, 5 , nstart=25)
cluster_profile <- t(kcl5$centers)
cluster_size <- kcl5$size
row_mean <- apply(cluster_profile, 1, mean)
col_mean <- apply(cluster_profile, 2, mean)
sorted_profile<-cluster_profile[order(row_mean),c(4,3,1,2,5)]
# reordered cluster sizes and profiles
cluster_size[c(4,3,1,2)]/101
round(sorted_profile,2)
png("loyalty.png")
matplot(sorted_profile[,-5], type = c("b"), pch="*", lwd=3,
xlab="Loyalty score ordered by average for total sample",
ylab="Average Ratings for Each Cluster")
title("Not at all likely, Not very likely, Quite Likely")
dev.off()
png("not-loyalty.png")
matplot(sorted_profile[,5], type = c("b"), pch="*", lwd=3,
xlab="Loyalty score ordered by average for total sample",
ylab="Average Ratings for Last Cluster")
title("People who will defintely switch")
dev.off()
library('semPLS')
data <- read.csv("loyalty-1.csv")
names <- names(data)
kcl5 <- kmeans(data, 5 , nstart=25)
cluster_profile <- t(kcl5$centers)
cluster_size <- kcl5$size
row_mean <- apply(cluster_profile, 1, mean)
col_mean <- apply(cluster_profile, 2, mean)
sorted_profile<-cluster_profile[order(row_mean),c(4,3,1,2,5)]
# reordered cluster sizes and profiles
cluster_size[c(4,3,1,2,5)]/101
round(sorted_profile,2)
png("loyalty.png")
matplot(sorted_profile[,-5], type = c("b"), pch="*", lwd=3,
xlab="Loyalty score ordered by average for total sample",
ylab="Average Ratings for Each Cluster")
title("Not at all likely, Not very likely, Quite Likely")
dev.off()
png("not-loyalty.png")
matplot(sorted_profile[,5], type = c("b"), pch="*", lwd=3,
xlab="Loyalty score ordered by average for total sample",
ylab="Average Ratings for Last Cluster")
title("People who will defintely switch")
dev.off()
library('semPLS')
data <- read.csv("loyalty-1.csv")
names <- names(data)
kcl5 <- kmeans(data, 5 )
cluster_profile <- t(kcl5$centers)
cluster_size <- kcl5$size
row_mean <- apply(cluster_profile, 1, mean)
col_mean <- apply(cluster_profile, 2, mean)
sorted_profile<-cluster_profile[order(row_mean),c(4,3,1,2,5)]
# reordered cluster sizes and profiles
cluster_size[c(4,3,1,2,5)]/101
round(sorted_profile,2)
png("loyalty.png")
matplot(sorted_profile[,-5], type = c("b"), pch="*", lwd=3,
xlab="Loyalty score ordered by average for total sample",
ylab="Average Ratings for Each Cluster")
title("Not at all likely, Not very likely, Quite Likely")
dev.off()
png("not-loyalty.png")
matplot(sorted_profile[,5], type = c("b"), pch="*", lwd=3,
xlab="Loyalty score ordered by average for total sample",
ylab="Average Ratings for Last Cluster")
title("People who will defintely switch")
dev.off()
library(tidyverse)
df <- read.csv("out.csv")
library(tidyverse)
df <- read.csv("out.csv")
glimpse(df)
library(tidyverse)
df <- read.csv("out.csv")
glimpse(df)
prop.table(table(df$gender))
library(tidyverse)
df <- read.csv("out.csv")
glimpse(df)
prop.table(table(df$gender))
library(gmodels)
CrossTable(df$age,df$gender,prop.r=FALSE,prop.t=FALSE,prop.chisq=FALSE,format="SPSS")
library(tidyverse)
df <- read.csv("out.csv")
glimpse(df)
prop.table(table(df$gender))
library(gmodels)
CrossTable(df$age,df$gender,prop.r=FALSE,prop.t=FALSE,prop.chisq=FALSE,format="SPSS")
ggplot(df,aes(x=age))+
geom_bar()+
facet_grid(~gender)
library(tidyverse)
df <- read.csv("out.csv")
glimpse(df)
prop.table(table(df$gender))
library(gmodels)
CrossTable(df$age,df$gender,prop.r=FALSE,prop.t=FALSE,prop.chisq=FALSE,format="SPSS")
ggplot(df,aes(x=age))+
geom_bar()+
facet_grid(~gender)
ggsave("age_distribution.png")
library(tidyverse)
df <- read.csv("out.csv")
glimpse(df)
prop.table(table(df$gender))
library(gmodels)
CrossTable(df$age,df$gender,prop.r=FALSE,prop.t=FALSE,prop.chisq=FALSE,format="SPSS")
ggplot(df,aes(x=age))+
geom_bar()+
facet_grid(~gender)
ggsave("plots/age_distribution.png")
install.packages("EnQuireR")
library('EnQuireR')
data(tea)
names(tea)
head(data)
head(tea)
library('EnQuireR')
data <- read.csv("data.csv")
ENbarplot(data, 20)
library('EnQuireR')
data <- read.csv("out.csv")
ENbarplot(data, 20)
library('EnQuireR')
data <- read.csv("out.csv")
chisq.desc(data, 10:20, 3:9)
library('EnQuireR')
data <- read.csv("out.csv")
chisq.desc(data)
library('EnQuireR')
data <- read.csv("out.csv")
chisq.desc(data, Y=10:20)
library('EnQuireR')
data <- read.csv("out.csv")
chisq.desc(data, Y=10:20, X=3:9)
data[3:9]
library('EnQuireR')
data <- read.csv("out.csv")
chisq.desc(data, Y=data[10:21], X=data[3:10])
library('EnQuireR')
data <- read.csv("out.csv")
chisq.desc(data, Y=10:21, X=3:10)
library('EnQuireR')
data <- read.csv("out.csv")
MCA(data)
library('EnQuireR')
data <- read.csv("out.csv")
MCA(data[,3:])
library('EnQuireR')
data <- read.csv("out.csv")
MCA(data[,3::])
library('EnQuireR')
data <- read.csv("out.csv")
MCA(data[,3:27])
write.csv(file = "tea.csv", data(tea))
library('EnQuireR')
data <- read.csv("out.csv")
MCA(data)
library('EnQuireR')
data <- read.csv("out.csv")
MCA(data[])
library('EnQuireR')
data <- read.csv("out.csv")
MCA(data[, 0:length(data)])
pcv <- read.csv("pcv.csv")
cs <- read.csv("cs.csv")
sp <- read.csv("sp.csv")
loyalty <- read.csv("loyalty.csv")
chisq.test(table(pcv, cs~sp))
pcv <- read.csv("pcv.csv")
cs <- read.csv("cs.csv")
sp <- read.csv("sp.csv")
loyalty <- read.csv("loyalty.csv")
chisq.test(table(pcv, cs))
pcv <- read.csv("pcv.csv")
cs <- read.csv("cs.csv")
sp <- read.csv("sp.csv")
loyalty <- read.csv("loyalty.csv")
chisq.test(pcv, cs)
pcv <- read.csv("pcv.csv")
cs <- read.csv("cs.csv")
sp <- read.csv("sp.csv")
loyalty <- read.csv("loyalty.csv")
chisq.test(pcv, cs)
chisq.test(pcv, sp)
chisq.test(pcv, pcv)
chisq.test(pcv, loyalty)
pcv <- read.csv("pcv.csv")
cs <- read.csv("cs.csv")
sp <- read.csv("sp.csv")
loyalty <- read.csv("loyalty.csv")
chisq.test(pcv, cs)
chisq.test(cs, loyalty)
pcv <- read.csv("pcv.csv")
cs <- read.csv("cs.csv")
sp <- read.csv("sp.csv")
loyalty <- read.csv("loyalty.csv")
chisq.test(pcv, cs)
chisq.test(cs, loyalty)
cor(pcv, cs)
pcv <- read.csv("pcv.csv")
cs <- read.csv("cs.csv")
sp <- read.csv("sp.csv")
loyalty <- read.csv("loyalty.csv")
chisq.test(pcv, cs)
chisq.test(cs, loyalty)
lm(pcv~cs)
library(tm)
library(SnowballC)
library(RColorBrewer)
library(dplyr)
data <- read.csv("reviews/sbtreviews.csv", stringsAsFactors = FALSE)
myCorpus <- Corpus(VectorSource(data$reviews))
myCorpus <- tm_map(myCorpus, removeNumbers)
myCorpus <- tm_map(myCorpus, removeWords, stopwords("english")) #removes common english stopwords
myCorpus <- tm_map(myCorpus, removeWords, c("muffin"))  #You can specify words to remove
myCorpus <- tm_map(myCorpus, PlainTextDocument)
#build a term-document matrix
myTDM = TermDocumentMatrix(myCorpus, control = list(minWordLength = 1))
m = as.matrix(myTDM)
v = sort(rowSums(m), decreasing = TRUE)
d = data.frame(word = names(v),freq=v)
library(wordcloud)
wordcloud(myCorpus, scale=c(5,0.5), max.words=100, random.order=FALSE, rot.per=0.25,
use.r.layout=FALSE, colors=brewer.pal(8, "Dark2"))
library(tm)
library(SnowballC)
library(RColorBrewer)
library(dplyr)
data <- read.csv("reviews/sbtreviews.csv", stringsAsFactors = FALSE)
docs <- Corpus(VectorSource(data$reviews))
docs <- tm_map(docs, content_transformer(tolower))
docs <- tm_map(docs, removeNumbers)
# Remove english common stopwords
docs <- tm_map(docs, removeWords, stopwords("english"))
# Remove your own stop word
# specify your stopwords as a character vector
docs <- tm_map(docs, removeWords, c("blabla1", "blabla2"))
# Remove punctuations
docs <- tm_map(docs, removePunctuation)
# Eliminate extra white spaces
docs <- tm_map(docs, stripWhitespace)
# Text stemming
# docs <- tm_map(docs, stemDocument)
dtm <- TermDocumentMatrix(docs)
m <- as.matrix(dtm)
v <- sort(rowSums(m),decreasing=TRUE)
d <- data.frame(word = names(v),freq=v)
head(d, 10)
library(tm)
library(SnowballC)
library(RColorBrewer)
library(dplyr)
data <- read.csv("reviews/sbtreviews.csv", stringsAsFactors = FALSE)
docs <- Corpus(VectorSource(data$reviews))
docs <- tm_map(docs, content_transformer(tolower))
docs <- tm_map(docs, removeNumbers)
# Remove english common stopwords
docs <- tm_map(docs, removeWords, stopwords("english"))
# Remove your own stop word
# specify your stopwords as a character vector
docs <- tm_map(docs, removeWords, c("blabla1", "blabla2"))
# Remove punctuations
docs <- tm_map(docs, removePunctuation)
# Eliminate extra white spaces
docs <- tm_map(docs, stripWhitespace)
# Text stemming
# docs <- tm_map(docs, stemDocument)
dtm <- TermDocumentMatrix(docs)
m <- as.matrix(dtm)
v <- sort(rowSums(m),decreasing=TRUE)
d <- data.frame(word = names(v),freq=v)
head(d, 10)
set.seed(1234)
wordcloud(words = d$word, freq = d$freq, min.freq = 1,
max.words=200, random.order=FALSE, rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
library(tm)
library(SnowballC)
library(RColorBrewer)
library(dplyr)
data <- read.csv("reviews/sbtreviews.csv", stringsAsFactors = FALSE)
docs <- Corpus(VectorSource(data$reviews))
docs <- tm_map(docs, content_transformer(tolower))
docs <- tm_map(docs, removeNumbers)
# Remove english common stopwords
docs <- tm_map(docs, removeWords, stopwords("english"))
# Remove your own stop word
# specify your stopwords as a character vector
docs <- tm_map(docs, removeWords, c("bank", "account", "banking", "state", "service", "will", "branch", "customer", "one"))
# Remove punctuations
docs <- tm_map(docs, removePunctuation)
# Eliminate extra white spaces
docs <- tm_map(docs, stripWhitespace)
# Text stemming
# docs <- tm_map(docs, stemDocument)
dtm <- TermDocumentMatrix(docs)
m <- as.matrix(dtm)
v <- sort(rowSums(m),decreasing=TRUE)
d <- data.frame(word = names(v),freq=v)
head(d, 10)
set.seed(1234)
wordcloud(words = d$word, freq = d$freq, min.freq = 1,
max.words=200, random.order=FALSE, rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
library(tm)
library(SnowballC)
library(RColorBrewer)
library(dplyr)
data <- read.csv("reviews/sbtreviews.csv", stringsAsFactors = FALSE)
docs <- Corpus(VectorSource(data$reviews))
docs <- tm_map(docs, content_transformer(tolower))
docs <- tm_map(docs, removeNumbers)
# Remove english common stopwords
docs <- tm_map(docs, removeWords, stopwords("english"))
# Remove your own stop word
# specify your stopwords as a character vector
docs <- tm_map(docs, removeWords, c("bank", "account", "banking", "state", "service", "will", "branch", "customer", "one", "sbt", "kerela"))
# Remove punctuations
docs <- tm_map(docs, removePunctuation)
# Eliminate extra white spaces
docs <- tm_map(docs, stripWhitespace)
# Text stemming
# docs <- tm_map(docs, stemDocument)
dtm <- TermDocumentMatrix(docs)
m <- as.matrix(dtm)
v <- sort(rowSums(m),decreasing=TRUE)
d <- data.frame(word = names(v),freq=v)
head(d, 10)
set.seed(1234)
wordcloud(words = d$word, freq = d$freq, min.freq = 1,
max.words=200, random.order=TRUE, rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
